digraph G {
47 [label="47: Entry:__bswap_32" shape=box ];
48 [label="48: Exit:" shape=box ];
49 [label="49: {" shape=box ];
50 [label="50: return(__builtin_bswap32(__bsx));" shape=box ];
51 [label="51: Entry:__bswap_64" shape=box ];
52 [label="52: Exit:" shape=box ];
53 [label="53: {" shape=box ];
54 [label="54: return(__builtin_bswap64(__bsx));" shape=box ];
138 [label="138: Entry:randlc2" shape=box ];
139 [label="139: Exit:" shape=box ];
140 [label="140: {" shape=box ];
141 [label="141: static int KS = 0;" shape=box ];
142 [label="142: static double R23;" shape=box ];
143 [label="143: static double R46;" shape=box ];
144 [label="144: static double T23;" shape=box ];
145 [label="145: static double T46;" shape=box ];
146 [label="146: double T1;" shape=box ];
147 [label="147: double T2;" shape=box ];
148 [label="148: double T3;" shape=box ];
149 [label="149: double T4;" shape=box ];
150 [label="150: double A1;" shape=box ];
151 [label="151: double A2;" shape=box ];
152 [label="152: double X1;" shape=box ];
153 [label="153: double X2;" shape=box ];
154 [label="154: double Z;" shape=box ];
155 [label="155: int i;" shape=box ];
156 [label="156: int j;" shape=box ];
158 [label="158: KS == 0;" shape=oval style=filled color=yellow ];
159 [label="159: {" shape=box ];
160 [label="160: R23 = 1.0;" shape=box ];
161 [label="161: R46 = 1.0;" shape=box ];
162 [label="162: T23 = 1.0;" shape=box ];
163 [label="163: T46 = 1.0;" shape=box ];
165 [label="165: i = 1;" shape=box ];
166 [label="166: i <= 23;" shape=oval style=filled color=yellow ];
167 [label="167: i++" shape=box ];
168 [label="168: {" shape=box ];
169 [label="169: R23 = 0.50 * R23;" shape=box ];
170 [label="170: T23 = 2.0 * T23;" shape=box ];
172 [label="172: i = 1;" shape=box ];
173 [label="173: i <= 46;" shape=oval style=filled color=yellow ];
174 [label="174: i++" shape=box ];
175 [label="175: {" shape=box ];
176 [label="176: R46 = 0.50 * R46;" shape=box ];
177 [label="177: T46 = 2.0 * T46;" shape=box ];
178 [label="178: KS = 1;" shape=box ];
179 [label="179: T1 = R23 * *A;" shape=box ];
180 [label="180: j = T1;" shape=box ];
181 [label="181: A1 = j;" shape=box ];
182 [label="182: A2 = *A - T23 * A1;" shape=box ];
183 [label="183: T1 = R23 * *X;" shape=box ];
184 [label="184: j = T1;" shape=box ];
185 [label="185: X1 = j;" shape=box ];
186 [label="186: X2 = *X - T23 * X1;" shape=box ];
187 [label="187: T1 = A1 * X2 + A2 * X1;" shape=box ];
188 [label="188: j =(R23 * T1);" shape=box ];
189 [label="189: T2 = j;" shape=box ];
190 [label="190: Z = T1 - T23 * T2;" shape=box ];
191 [label="191: T3 = T23 * Z + A2 * X2;" shape=box ];
192 [label="192: j =(R46 * T3);" shape=box ];
193 [label="193: T4 = j;" shape=box ];
194 [label="194: *X = T3 - T46 * T4;" shape=box ];
195 [label="195: return R46 * *X;" shape=box ];
196 [label="196: Entry:create_seq" shape=box ];
197 [label="197: Exit:" shape=box ];
198 [label="198: {" shape=box ];
199 [label="199: double x;" shape=box ];
200 [label="200: int i;" shape=box ];
201 [label="201: int j;" shape=box ];
202 [label="202: int k;" shape=box ];
203 [label="203: k =(1 << 19) / 4;" shape=box ];
205 [label="205: i = 0;" shape=box ];
206 [label="206: i < 1 << 23;" shape=oval style=filled color=yellow ];
207 [label="207: i++" shape=box ];
208 [label="208: {" shape=box ];
209 [label="209: Call:x = randlc2(&seed,&a);" shape=box ];
210 [label="210: CallReturn:" shape=box ];
211 [label="211: x += randlc2(&seed,&a);" shape=box ];
212 [label="212: x += randlc2(&seed,&a);" shape=box ];
213 [label="213: x += randlc2(&seed,&a);" shape=box ];
214 [label="214: key_array[i] =(k * x);" shape=box ];
215 [label="215: Entry:full_verify" shape=box ];
216 [label="216: Exit:" shape=box ];
217 [label="217: {" shape=box ];
218 [label="218: INT_TYPE i;" shape=box ];
219 [label="219: INT_TYPE j;" shape=box ];
220 [label="220: INT_TYPE k;" shape=box ];
221 [label="221: INT_TYPE m;" shape=box ];
222 [label="222: INT_TYPE unique_keys;" shape=box ];
224 [label="224: i = 0;" shape=box ];
225 [label="225: i < 1 << 23;" shape=oval style=filled color=yellow ];
226 [label="226: i++" shape=box ];
227 [label="227: {" shape=box ];
228 [label="228: key_array[--key_buff_ptr_global[key_buff2[i]]] = key_buff2[i];" shape=box ];
229 [label="229: j = 0;" shape=box ];
231 [label="231: i = 1;" shape=box ];
232 [label="232: i < 1 << 23;" shape=oval style=filled color=yellow ];
233 [label="233: i++" shape=box ];
234 [label="234: {" shape=box ];
236 [label="236: key_array[i - 1] > key_array[i];" shape=oval style=filled color=yellow ];
237 [label="237: {" shape=box ];
238 [label="238: j++;" shape=box ];
240 [label="240: j != 0;" shape=oval style=filled color=yellow ];
241 [label="241: {" shape=box ];
242 [label="242: Call:printf(\"Full_verify: number of keys out of sort: %d\n\",j);" shape=box ];
243 [label="243: CallReturn:" shape=box ];
244 [label="244: {" shape=box ];
245 [label="245: passed_verification++;" shape=box ];
246 [label="246: Entry:rank" shape=box ];
247 [label="247: Exit:" shape=box ];
248 [label="248: {" shape=box ];
249 [label="249: INT_TYPE i;" shape=box ];
250 [label="250: INT_TYPE j;" shape=box ];
251 [label="251: INT_TYPE k;" shape=box ];
252 [label="252: INT_TYPE l;" shape=box ];
253 [label="253: INT_TYPE m;" shape=box ];
254 [label="254: INT_TYPE shift = 19 - 10;" shape=box ];
255 [label="255: INT_TYPE key;" shape=box ];
256 [label="256: INT_TYPE min_key_val;" shape=box ];
257 [label="257: INT_TYPE max_key_val;" shape=box ];
258 [label="258: INT_TYPE prv_buff1[1 << 19];" shape=box ];
259 [label="259: #pragma omp master" shape=box ];
260 [label="260: {" shape=box ];
261 [label="261: key_array[iteration] = iteration;" shape=box ];
262 [label="262: key_array[iteration + 10] =(1 << 19) - iteration;" shape=box ];
264 [label="264: i = 0;" shape=box ];
265 [label="265: i < 5;" shape=oval style=filled color=yellow ];
266 [label="266: i++" shape=box ];
267 [label="267: {" shape=box ];
268 [label="268: partial_verify_vals[i] = key_array[test_index_array[i]];" shape=box ];
270 [label="270: i = 0;" shape=box ];
271 [label="271: i < 1 << 19;" shape=oval style=filled color=yellow ];
272 [label="272: i++" shape=box ];
273 [label="273: {" shape=box ];
274 [label="274: key_buff1[i] = 0;" shape=box ];
275 [label="275: #pragma omp barrier" shape=box ];
277 [label="277: i = 0;" shape=box ];
278 [label="278: i < 1 << 19;" shape=oval style=filled color=yellow ];
279 [label="279: i++" shape=box ];
280 [label="280: {" shape=box ];
281 [label="281: prv_buff1[i] = 0;" shape=box ];
282 [label="282: #pragma omp for nowait" shape=box ];
284 [label="284: i = 0;" shape=box ];
285 [label="285: i < 1 << 23;" shape=oval style=filled color=yellow ];
286 [label="286: i++" shape=box ];
287 [label="287: {" shape=box ];
288 [label="288: key_buff2[i] = key_array[i];" shape=box ];
289 [label="289: prv_buff1[key_buff2[i]]++;" shape=box ];
291 [label="291: i = 0;" shape=box ];
292 [label="292: i <(1 << 19) - 1;" shape=oval style=filled color=yellow ];
293 [label="293: i++" shape=box ];
294 [label="294: {" shape=box ];
295 [label="295: prv_buff1[i + 1] += prv_buff1[i];" shape=box ];
296 [label="296: #pragma omp critical" shape=box ];
297 [label="297: {" shape=box ];
299 [label="299: i = 0;" shape=box ];
300 [label="300: i < 1 << 19;" shape=oval style=filled color=yellow ];
301 [label="301: i++" shape=box ];
302 [label="302: {" shape=box ];
303 [label="303: key_buff1[i] += prv_buff1[i];" shape=box ];
304 [label="304: #pragma omp barrier" shape=box ];
305 [label="305: #pragma omp master" shape=box ];
306 [label="306: {" shape=box ];
308 [label="308: i = 0;" shape=box ];
309 [label="309: i < 5;" shape=oval style=filled color=yellow ];
310 [label="310: i++" shape=box ];
311 [label="311: {" shape=box ];
312 [label="312: k = partial_verify_vals[i];" shape=box ];
314 [label="314: 0 <= k && k <=(1 << 23) - 1;" shape=oval style=filled color=yellow ];
315 [label="315: {" shape=box ];
317 [label="317: 'A';" shape=oval style=filled color=yellow ];
319 [label="319: case 'S':" shape=box ];
320 [label="320: {" shape=box ];
322 [label="322: i <= 2;" shape=oval style=filled color=yellow ];
323 [label="323: {" shape=box ];
325 [label="325: key_buff1[k - 1] != test_rank_array[i] + iteration;" shape=oval style=filled color=yellow ];
326 [label="326: {" shape=box ];
327 [label="327: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
328 [label="328: CallReturn:" shape=box ];
329 [label="329: {" shape=box ];
330 [label="330: passed_verification++;" shape=box ];
331 [label="331: {" shape=box ];
333 [label="333: key_buff1[k - 1] != test_rank_array[i] - iteration;" shape=oval style=filled color=yellow ];
334 [label="334: {" shape=box ];
335 [label="335: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
336 [label="336: CallReturn:" shape=box ];
337 [label="337: {" shape=box ];
338 [label="338: passed_verification++;" shape=box ];
339 [label="339: break;" shape=box ];
340 [label="340: case 'W':" shape=box ];
341 [label="341: {" shape=box ];
343 [label="343: i < 2;" shape=oval style=filled color=yellow ];
344 [label="344: {" shape=box ];
346 [label="346: key_buff1[k - 1] != test_rank_array[i] +(iteration - 2);" shape=oval style=filled color=yellow ];
347 [label="347: {" shape=box ];
348 [label="348: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
349 [label="349: CallReturn:" shape=box ];
350 [label="350: {" shape=box ];
351 [label="351: passed_verification++;" shape=box ];
352 [label="352: {" shape=box ];
354 [label="354: key_buff1[k - 1] != test_rank_array[i] - iteration;" shape=oval style=filled color=yellow ];
355 [label="355: {" shape=box ];
356 [label="356: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
357 [label="357: CallReturn:" shape=box ];
358 [label="358: {" shape=box ];
359 [label="359: passed_verification++;" shape=box ];
360 [label="360: break;" shape=box ];
361 [label="361: case 'A':" shape=box ];
362 [label="362: {" shape=box ];
364 [label="364: i <= 2;" shape=oval style=filled color=yellow ];
365 [label="365: {" shape=box ];
367 [label="367: key_buff1[k - 1] != test_rank_array[i] +(iteration - 1);" shape=oval style=filled color=yellow ];
368 [label="368: {" shape=box ];
369 [label="369: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
370 [label="370: CallReturn:" shape=box ];
371 [label="371: {" shape=box ];
372 [label="372: passed_verification++;" shape=box ];
373 [label="373: {" shape=box ];
375 [label="375: key_buff1[k - 1] != test_rank_array[i] -(iteration - 1);" shape=oval style=filled color=yellow ];
376 [label="376: {" shape=box ];
377 [label="377: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
378 [label="378: CallReturn:" shape=box ];
379 [label="379: {" shape=box ];
380 [label="380: passed_verification++;" shape=box ];
381 [label="381: break;" shape=box ];
382 [label="382: case 'B':" shape=box ];
383 [label="383: {" shape=box ];
385 [label="385: i == 1 || i == 2 || i == 4;" shape=oval style=filled color=yellow ];
386 [label="386: {" shape=box ];
388 [label="388: key_buff1[k - 1] != test_rank_array[i] + iteration;" shape=oval style=filled color=yellow ];
389 [label="389: {" shape=box ];
390 [label="390: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
391 [label="391: CallReturn:" shape=box ];
392 [label="392: {" shape=box ];
393 [label="393: passed_verification++;" shape=box ];
394 [label="394: {" shape=box ];
396 [label="396: key_buff1[k - 1] != test_rank_array[i] - iteration;" shape=oval style=filled color=yellow ];
397 [label="397: {" shape=box ];
398 [label="398: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
399 [label="399: CallReturn:" shape=box ];
400 [label="400: {" shape=box ];
401 [label="401: passed_verification++;" shape=box ];
402 [label="402: break;" shape=box ];
403 [label="403: case 'C':" shape=box ];
404 [label="404: {" shape=box ];
406 [label="406: i <= 2;" shape=oval style=filled color=yellow ];
407 [label="407: {" shape=box ];
409 [label="409: key_buff1[k - 1] != test_rank_array[i] + iteration;" shape=oval style=filled color=yellow ];
410 [label="410: {" shape=box ];
411 [label="411: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
412 [label="412: CallReturn:" shape=box ];
413 [label="413: {" shape=box ];
414 [label="414: passed_verification++;" shape=box ];
415 [label="415: {" shape=box ];
417 [label="417: key_buff1[k - 1] != test_rank_array[i] - iteration;" shape=oval style=filled color=yellow ];
418 [label="418: {" shape=box ];
419 [label="419: Call:printf(\"Failed partial verification: iteration %d, test key %d\n\",iteration,i);" shape=box ];
420 [label="420: CallReturn:" shape=box ];
421 [label="421: {" shape=box ];
422 [label="422: passed_verification++;" shape=box ];
423 [label="423: break;" shape=box ];
425 [label="425: iteration == 10;" shape=oval style=filled color=yellow ];
426 [label="426: {" shape=box ];
427 [label="427: key_buff_ptr_global = key_buff1;" shape=box ];
428 [label="428: Entry:main" shape=box ];
429 [label="429: Exit:" shape=box ];
430 [label="430: {" shape=box ];
431 [label="431: int i;" shape=box ];
432 [label="432: int iteration;" shape=box ];
433 [label="433: int itemp;" shape=box ];
434 [label="434: int nthreads = 1;" shape=box ];
435 [label="435: double timecounter;" shape=box ];
436 [label="436: double maxtime;" shape=box ];
438 [label="438: i = 0;" shape=box ];
439 [label="439: i < 5;" shape=oval style=filled color=yellow ];
440 [label="440: i++" shape=box ];
441 [label="441: {" shape=box ];
443 [label="443: 'A';" shape=oval style=filled color=yellow ];
445 [label="445: case 'S':" shape=box ];
446 [label="446: {" shape=box ];
447 [label="447: test_index_array[i] = S_test_index_array[i];" shape=box ];
448 [label="448: test_rank_array[i] = S_test_rank_array[i];" shape=box ];
449 [label="449: break;" shape=box ];
450 [label="450: case 'A':" shape=box ];
451 [label="451: {" shape=box ];
452 [label="452: test_index_array[i] = A_test_index_array[i];" shape=box ];
453 [label="453: test_rank_array[i] = A_test_rank_array[i];" shape=box ];
454 [label="454: break;" shape=box ];
455 [label="455: case 'W':" shape=box ];
456 [label="456: {" shape=box ];
457 [label="457: test_index_array[i] = W_test_index_array[i];" shape=box ];
458 [label="458: test_rank_array[i] = W_test_rank_array[i];" shape=box ];
459 [label="459: break;" shape=box ];
460 [label="460: case 'B':" shape=box ];
461 [label="461: {" shape=box ];
462 [label="462: test_index_array[i] = B_test_index_array[i];" shape=box ];
463 [label="463: test_rank_array[i] = B_test_rank_array[i];" shape=box ];
464 [label="464: break;" shape=box ];
465 [label="465: case 'C':" shape=box ];
466 [label="466: {" shape=box ];
467 [label="467: test_index_array[i] = C_test_index_array[i];" shape=box ];
468 [label="468: test_rank_array[i] = C_test_rank_array[i];" shape=box ];
469 [label="469: break;" shape=box ];
470 [label="470: ;" shape=box ];
471 [label="471: Call:printf(\"\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - IS Benchmark\n\n\");" shape=box ];
472 [label="472: CallReturn:" shape=box ];
473 [label="473: int __temp0__ = 1 << 23;" shape=box ];
474 [label="474: Call:printf(\" Size: %d (class %c)\n\",__temp0__,'A');" shape=box ];
475 [label="475: CallReturn:" shape=box ];
476 [label="476: Call:printf(\" Iterations: %d\n\",10);" shape=box ];
477 [label="477: CallReturn:" shape=box ];
478 [label="478: Call:timer_clear(0);" shape=box ];
479 [label="479: CallReturn:" shape=box ];
480 [label="480: Call:create_seq(314159265.00,1220703125.00);" shape=box ];
481 [label="481: CallReturn:" shape=box ];
482 [label="482: #pragma omp parallel" shape=box ];
483 [label="483: Call:rank(1);" shape=box ];
484 [label="484: CallReturn:" shape=box ];
485 [label="485: passed_verification = 0;" shape=box ];
487 [label="487: 'A' != 'S';" shape=oval style=filled color=yellow ];
488 [label="488: {" shape=box ];
489 [label="489: Call:printf(\"\n iteration\n\");" shape=box ];
490 [label="490: CallReturn:" shape=box ];
491 [label="491: Call:timer_start(0);" shape=box ];
492 [label="492: CallReturn:" shape=box ];
493 [label="493: #pragma omp parallel private(iteration)" shape=box ];
495 [label="495: iteration = 1;" shape=box ];
496 [label="496: iteration <= 10;" shape=oval style=filled color=yellow ];
497 [label="497: iteration++" shape=box ];
498 [label="498: {" shape=box ];
499 [label="499: #pragma omp master" shape=box ];
501 [label="501: 'A' != 'S';" shape=oval style=filled color=yellow ];
502 [label="502: {" shape=box ];
503 [label="503: Call:printf(\" %d\n\",iteration);" shape=box ];
504 [label="504: CallReturn:" shape=box ];
505 [label="505: Call:rank(iteration);" shape=box ];
506 [label="506: CallReturn:" shape=box ];
507 [label="507: Call:timer_stop(0);" shape=box ];
508 [label="508: CallReturn:" shape=box ];
509 [label="509: Call:timecounter = timer_read(0);" shape=box ];
510 [label="510: CallReturn:" shape=box ];
511 [label="511: Call:full_verify();" shape=box ];
512 [label="512: CallReturn:" shape=box ];
514 [label="514: passed_verification != 5 * 10 + 1;" shape=oval style=filled color=yellow ];
515 [label="515: {" shape=box ];
516 [label="516: passed_verification = 0;" shape=box ];
517 [label="517: int __temp1__ = 1 << 23;" shape=box ];
518 [label="518: double __temp2__ =((double )(10 *(1 << 23))) / timecounter / 1000000.;" shape=box ];
519 [label="519: Call:c_print_results(\"IS\",'A',__temp1__,0,0,10,nthreads,timecounter,__temp2__,\"keys ranked\",passed_verification,\"2.3\",\"07 Mar 2013\",\"identityTranslator \",\"$(CC)\",\"/export/tmp.liao6/workspace/thrifty/build64...\",\"-I../common\",\"-rose:openmp:lowering \",\"-lm\",\"randlc2\");" shape=box ];
520 [label="520: CallReturn:" shape=box ];
521 [label="521: return 0;" shape=box ];
522 [label="522: Entry:c_print_results" shape=box ];
523 [label="523: Exit:" shape=box ];
524 [label="524: {" shape=box ];
525 [label="525: char *evalue = \"1000\";" shape=box ];
526 [label="526: Call:printf(\"\n\n %s Benchmark Completed\n\",name);" shape=box ];
527 [label="527: CallReturn:" shape=box ];
528 [label="528: Call:printf(\" Class = %c\n\",cclass);" shape=box ];
529 [label="529: CallReturn:" shape=box ];
531 [label="531: n2 == 0 && n3 == 0;" shape=oval style=filled color=yellow ];
532 [label="532: {" shape=box ];
533 [label="533: Call:printf(\" Size = %12d\n\",n1);" shape=box ];
534 [label="534: CallReturn:" shape=box ];
535 [label="535: {" shape=box ];
536 [label="536: Call:printf(\" Size = %3dx%3dx%3d\n\",n1,n2,n3);" shape=box ];
537 [label="537: CallReturn:" shape=box ];
538 [label="538: Call:printf(\" Iterations = %12d\n\",niter);" shape=box ];
539 [label="539: CallReturn:" shape=box ];
540 [label="540: Call:printf(\" Threads = %12d\n\",nthreads);" shape=box ];
541 [label="541: CallReturn:" shape=box ];
542 [label="542: Call:printf(\" Time in seconds = %12.2f\n\",t);" shape=box ];
543 [label="543: CallReturn:" shape=box ];
544 [label="544: Call:printf(\" Mop/s total = %12.2f\n\",mops);" shape=box ];
545 [label="545: CallReturn:" shape=box ];
546 [label="546: Call:printf(\" Operation type = %24s\n\",optype);" shape=box ];
547 [label="547: CallReturn:" shape=box ];
549 [label="549: passed_verification;" shape=oval style=filled color=yellow ];
550 [label="550: {" shape=box ];
551 [label="551: Call:printf(\" Verification = SUCCESSFUL\n\");" shape=box ];
552 [label="552: CallReturn:" shape=box ];
553 [label="553: {" shape=box ];
554 [label="554: Call:printf(\" Verification = UNSUCCESSFUL\n\");" shape=box ];
555 [label="555: CallReturn:" shape=box ];
556 [label="556: Call:printf(\" Version = %12s\n\",npbversion);" shape=box ];
557 [label="557: CallReturn:" shape=box ];
558 [label="558: Call:printf(\" Compile date = %12s\n\",compiletime);" shape=box ];
559 [label="559: CallReturn:" shape=box ];
560 [label="560: Call:printf(\"\n Compile options:\n\");" shape=box ];
561 [label="561: CallReturn:" shape=box ];
562 [label="562: Call:printf(\" CC = %s\n\",cc);" shape=box ];
563 [label="563: CallReturn:" shape=box ];
564 [label="564: Call:printf(\" CLINK = %s\n\",clink);" shape=box ];
565 [label="565: CallReturn:" shape=box ];
566 [label="566: Call:printf(\" C_LIB = %s\n\",c_lib);" shape=box ];
567 [label="567: CallReturn:" shape=box ];
568 [label="568: Call:printf(\" C_INC = %s\n\",c_inc);" shape=box ];
569 [label="569: CallReturn:" shape=box ];
570 [label="570: Call:printf(\" CFLAGS = %s\n\",cflags);" shape=box ];
571 [label="571: CallReturn:" shape=box ];
572 [label="572: Call:printf(\" CLINKFLAGS = %s\n\",clinkflags);" shape=box ];
573 [label="573: CallReturn:" shape=box ];
574 [label="574: Call:printf(\" RAND = %s\n\",rand);" shape=box ];
575 [label="575: CallReturn:" shape=box ];
576 [label="576: Entry:elapsed_time" shape=box ];
577 [label="577: Exit:" shape=box ];
578 [label="578: {" shape=box ];
579 [label="579: double t;" shape=box ];
580 [label="580: Call:wtime(&t);" shape=box ];
581 [label="581: CallReturn:" shape=box ];
582 [label="582: return t;" shape=box ];
585 [label="585: Entry:timer_clear" shape=box ];
586 [label="586: Exit:" shape=box ];
587 [label="587: {" shape=box ];
588 [label="588: elapsed[n] = 0.0;" shape=box ];
589 [label="589: Entry:timer_start" shape=box ];
590 [label="590: Exit:" shape=box ];
591 [label="591: {" shape=box ];
592 [label="592: start[n] = elapsed_time();" shape=box ];
593 [label="593: Entry:timer_stop" shape=box ];
594 [label="594: Exit:" shape=box ];
595 [label="595: {" shape=box ];
596 [label="596: double t;" shape=box ];
597 [label="597: double now;" shape=box ];
598 [label="598: Call:now = elapsed_time();" shape=box ];
599 [label="599: CallReturn:" shape=box ];
600 [label="600: t = now - start[n];" shape=box ];
601 [label="601: elapsed[n] += t;" shape=box ];
602 [label="602: Entry:timer_read" shape=box ];
603 [label="603: Exit:" shape=box ];
604 [label="604: {" shape=box ];
605 [label="605: return elapsed[n];" shape=box ];
606 [label="606: Entry:wtime" shape=box ];
607 [label="607: Exit:" shape=box ];
608 [label="608: {" shape=box ];
609 [label="609: static int sec = - 1;" shape=box ];
610 [label="610: struct timeval tv;" shape=box ];
611 [label="611: Call:gettimeofday(&tv,((void *)0));" shape=box ];
612 [label="612: CallReturn:" shape=box ];
614 [label="614: sec < 0;" shape=oval style=filled color=yellow ];
615 [label="615: {" shape=box ];
616 [label="616: sec = tv . tv_sec;" shape=box ];
617 [label="617: *t =(tv . tv_sec - sec) + 1.0e-6 * tv . tv_usec;" shape=box ];
48->50 [label="{forward}" color=black ];
49->47 [label="{forward}" color=black ];
50->49 [label="{forward}" color=black ];
52->54 [label="{forward}" color=black ];
53->51 [label="{forward}" color=black ];
54->53 [label="{forward}" color=black ];
138->209 [label="{call}" color=black ];
139->195 [label="{forward}" color=black ];
140->138 [label="{forward}" color=black ];
141->140 [label="{forward}" color=black ];
142->141 [label="{forward}" color=black ];
143->142 [label="{forward}" color=black ];
144->143 [label="{forward}" color=black ];
145->144 [label="{forward}" color=black ];
146->145 [label="{forward}" color=black ];
147->146 [label="{forward}" color=black ];
148->147 [label="{forward}" color=black ];
149->148 [label="{forward}" color=black ];
150->149 [label="{forward}" color=black ];
151->150 [label="{forward}" color=black ];
152->151 [label="{forward}" color=black ];
153->152 [label="{forward}" color=black ];
154->153 [label="{forward}" color=black ];
155->154 [label="{forward}" color=black ];
156->155 [label="{forward}" color=black ];
158->156 [label="{forward}" color=black ];
159->158 [label="{forward, true}" color=green ];
160->159 [label="{forward}" color=black ];
161->160 [label="{forward}" color=black ];
162->161 [label="{forward}" color=black ];
163->162 [label="{forward}" color=black ];
165->163 [label="{forward}" color=black ];
166->165 [label="{forward}" color=black ];
166->167 [label="{backward}" color=blue ];
167->170 [label="{forward}" color=black ];
168->166 [label="{forward, true}" color=green ];
169->168 [label="{forward}" color=black ];
170->169 [label="{forward}" color=black ];
172->166 [label="{forward, false}" color=red ];
173->172 [label="{forward}" color=black ];
173->174 [label="{backward}" color=blue ];
174->177 [label="{forward}" color=black ];
175->173 [label="{forward, true}" color=green ];
176->175 [label="{forward}" color=black ];
177->176 [label="{forward}" color=black ];
178->173 [label="{forward, false}" color=red ];
179->158 [label="{forward, false}" color=red ];
179->178 [label="{forward}" color=black ];
180->179 [label="{forward}" color=black ];
181->180 [label="{forward}" color=black ];
182->181 [label="{forward}" color=black ];
183->182 [label="{forward}" color=black ];
184->183 [label="{forward}" color=black ];
185->184 [label="{forward}" color=black ];
186->185 [label="{forward}" color=black ];
187->186 [label="{forward}" color=black ];
188->187 [label="{forward}" color=black ];
189->188 [label="{forward}" color=black ];
190->189 [label="{forward}" color=black ];
191->190 [label="{forward}" color=black ];
192->191 [label="{forward}" color=black ];
193->192 [label="{forward}" color=black ];
194->193 [label="{forward}" color=black ];
195->194 [label="{forward}" color=black ];
196->480 [label="{call}" color=black ];
197->206 [label="{forward, false}" color=red ];
198->196 [label="{forward}" color=black ];
199->198 [label="{forward}" color=black ];
200->199 [label="{forward}" color=black ];
201->200 [label="{forward}" color=black ];
202->201 [label="{forward}" color=black ];
203->202 [label="{forward}" color=black ];
205->203 [label="{forward}" color=black ];
206->205 [label="{forward}" color=black ];
206->207 [label="{backward}" color=blue ];
207->214 [label="{forward}" color=black ];
208->206 [label="{forward, true}" color=green ];
209->208 [label="{forward}" color=black ];
210->139 [label="{callreturn}" color=black ];
211->210 [label="{forward}" color=black ];
212->211 [label="{forward}" color=black ];
213->212 [label="{forward}" color=black ];
214->213 [label="{forward}" color=black ];
215->511 [label="{call}" color=black ];
216->243 [label="{forward}" color=black ];
216->245 [label="{forward}" color=black ];
217->215 [label="{forward}" color=black ];
218->217 [label="{forward}" color=black ];
219->218 [label="{forward}" color=black ];
220->219 [label="{forward}" color=black ];
221->220 [label="{forward}" color=black ];
222->221 [label="{forward}" color=black ];
224->222 [label="{forward}" color=black ];
225->224 [label="{forward}" color=black ];
225->226 [label="{backward}" color=blue ];
226->228 [label="{forward}" color=black ];
227->225 [label="{forward, true}" color=green ];
228->227 [label="{forward}" color=black ];
229->225 [label="{forward, false}" color=red ];
231->229 [label="{forward}" color=black ];
232->231 [label="{forward}" color=black ];
232->233 [label="{backward}" color=blue ];
233->236 [label="{forward, false}" color=red ];
233->238 [label="{forward}" color=black ];
234->232 [label="{forward, true}" color=green ];
236->234 [label="{forward}" color=black ];
237->236 [label="{forward, true}" color=green ];
238->237 [label="{forward}" color=black ];
240->232 [label="{forward, false}" color=red ];
241->240 [label="{forward, true}" color=green ];
242->241 [label="{forward}" color=black ];
243->242 [label="{external}" color=black ];
244->240 [label="{forward, false}" color=red ];
245->244 [label="{forward}" color=black ];
246->483 [label="{call}" color=black ];
246->505 [label="{call}" color=black ];
247->425 [label="{forward, false}" color=red ];
247->427 [label="{forward}" color=black ];
248->246 [label="{forward}" color=black ];
249->248 [label="{forward}" color=black ];
250->249 [label="{forward}" color=black ];
251->250 [label="{forward}" color=black ];
252->251 [label="{forward}" color=black ];
253->252 [label="{forward}" color=black ];
254->253 [label="{forward}" color=black ];
255->254 [label="{forward}" color=black ];
256->255 [label="{forward}" color=black ];
257->256 [label="{forward}" color=black ];
258->257 [label="{forward}" color=black ];
259->258 [label="{forward}" color=black ];
260->259 [label="{forward}" color=black ];
261->260 [label="{forward}" color=black ];
262->261 [label="{forward}" color=black ];
264->262 [label="{forward}" color=black ];
265->264 [label="{forward}" color=black ];
265->266 [label="{backward}" color=blue ];
266->268 [label="{forward}" color=black ];
267->265 [label="{forward, true}" color=green ];
268->267 [label="{forward}" color=black ];
270->265 [label="{forward, false}" color=red ];
271->270 [label="{forward}" color=black ];
271->272 [label="{backward}" color=blue ];
272->274 [label="{forward}" color=black ];
273->271 [label="{forward, true}" color=green ];
274->273 [label="{forward}" color=black ];
275->271 [label="{forward, false}" color=red ];
277->275 [label="{forward}" color=black ];
278->277 [label="{forward}" color=black ];
278->279 [label="{backward}" color=blue ];
279->281 [label="{forward}" color=black ];
280->278 [label="{forward, true}" color=green ];
281->280 [label="{forward}" color=black ];
282->278 [label="{forward, false}" color=red ];
284->282 [label="{forward}" color=black ];
285->284 [label="{forward}" color=black ];
285->286 [label="{backward}" color=blue ];
286->289 [label="{forward}" color=black ];
287->285 [label="{forward, true}" color=green ];
288->287 [label="{forward}" color=black ];
289->288 [label="{forward}" color=black ];
291->285 [label="{forward, false}" color=red ];
292->291 [label="{forward}" color=black ];
292->293 [label="{backward}" color=blue ];
293->295 [label="{forward}" color=black ];
294->292 [label="{forward, true}" color=green ];
295->294 [label="{forward}" color=black ];
296->292 [label="{forward, false}" color=red ];
297->296 [label="{forward}" color=black ];
299->297 [label="{forward}" color=black ];
300->299 [label="{forward}" color=black ];
300->301 [label="{backward}" color=blue ];
301->303 [label="{forward}" color=black ];
302->300 [label="{forward, true}" color=green ];
303->302 [label="{forward}" color=black ];
304->300 [label="{forward, false}" color=red ];
305->304 [label="{forward}" color=black ];
306->305 [label="{forward}" color=black ];
308->306 [label="{forward}" color=black ];
309->308 [label="{forward}" color=black ];
309->310 [label="{backward}" color=blue ];
310->314 [label="{forward, false}" color=red ];
310->339 [label="{forward}" color=black ];
310->360 [label="{forward}" color=black ];
310->381 [label="{forward}" color=black ];
310->402 [label="{forward}" color=black ];
310->423 [label="{forward}" color=black ];
311->309 [label="{forward, true}" color=green ];
312->311 [label="{forward}" color=black ];
314->312 [label="{forward}" color=black ];
315->314 [label="{forward, true}" color=green ];
317->315 [label="{forward}" color=black ];
319->317 [label="{forward}" color=black ];
320->319 [label="{forward}" color=black ];
322->320 [label="{forward}" color=black ];
323->322 [label="{forward, true}" color=green ];
325->323 [label="{forward}" color=black ];
326->325 [label="{forward, true}" color=green ];
327->326 [label="{forward}" color=black ];
328->327 [label="{external}" color=black ];
329->325 [label="{forward, false}" color=red ];
330->329 [label="{forward}" color=black ];
331->322 [label="{forward, false}" color=red ];
333->331 [label="{forward}" color=black ];
334->333 [label="{forward, true}" color=green ];
335->334 [label="{forward}" color=black ];
336->335 [label="{external}" color=black ];
337->333 [label="{forward, false}" color=red ];
338->337 [label="{forward}" color=black ];
339->328 [label="{forward}" color=black ];
339->330 [label="{forward}" color=black ];
339->336 [label="{forward}" color=black ];
339->338 [label="{forward}" color=black ];
340->317 [label="{forward}" color=black ];
341->340 [label="{forward}" color=black ];
343->341 [label="{forward}" color=black ];
344->343 [label="{forward, true}" color=green ];
346->344 [label="{forward}" color=black ];
347->346 [label="{forward, true}" color=green ];
348->347 [label="{forward}" color=black ];
349->348 [label="{external}" color=black ];
350->346 [label="{forward, false}" color=red ];
351->350 [label="{forward}" color=black ];
352->343 [label="{forward, false}" color=red ];
354->352 [label="{forward}" color=black ];
355->354 [label="{forward, true}" color=green ];
356->355 [label="{forward}" color=black ];
357->356 [label="{external}" color=black ];
358->354 [label="{forward, false}" color=red ];
359->358 [label="{forward}" color=black ];
360->349 [label="{forward}" color=black ];
360->351 [label="{forward}" color=black ];
360->357 [label="{forward}" color=black ];
360->359 [label="{forward}" color=black ];
361->317 [label="{forward}" color=black ];
362->361 [label="{forward}" color=black ];
364->362 [label="{forward}" color=black ];
365->364 [label="{forward, true}" color=green ];
367->365 [label="{forward}" color=black ];
368->367 [label="{forward, true}" color=green ];
369->368 [label="{forward}" color=black ];
370->369 [label="{external}" color=black ];
371->367 [label="{forward, false}" color=red ];
372->371 [label="{forward}" color=black ];
373->364 [label="{forward, false}" color=red ];
375->373 [label="{forward}" color=black ];
376->375 [label="{forward, true}" color=green ];
377->376 [label="{forward}" color=black ];
378->377 [label="{external}" color=black ];
379->375 [label="{forward, false}" color=red ];
380->379 [label="{forward}" color=black ];
381->370 [label="{forward}" color=black ];
381->372 [label="{forward}" color=black ];
381->378 [label="{forward}" color=black ];
381->380 [label="{forward}" color=black ];
382->317 [label="{forward}" color=black ];
383->382 [label="{forward}" color=black ];
385->383 [label="{forward}" color=black ];
386->385 [label="{forward, true}" color=green ];
388->386 [label="{forward}" color=black ];
389->388 [label="{forward, true}" color=green ];
390->389 [label="{forward}" color=black ];
391->390 [label="{external}" color=black ];
392->388 [label="{forward, false}" color=red ];
393->392 [label="{forward}" color=black ];
394->385 [label="{forward, false}" color=red ];
396->394 [label="{forward}" color=black ];
397->396 [label="{forward, true}" color=green ];
398->397 [label="{forward}" color=black ];
399->398 [label="{external}" color=black ];
400->396 [label="{forward, false}" color=red ];
401->400 [label="{forward}" color=black ];
402->391 [label="{forward}" color=black ];
402->393 [label="{forward}" color=black ];
402->399 [label="{forward}" color=black ];
402->401 [label="{forward}" color=black ];
403->317 [label="{forward}" color=black ];
404->403 [label="{forward}" color=black ];
406->404 [label="{forward}" color=black ];
407->406 [label="{forward, true}" color=green ];
409->407 [label="{forward}" color=black ];
410->409 [label="{forward, true}" color=green ];
411->410 [label="{forward}" color=black ];
412->411 [label="{external}" color=black ];
413->409 [label="{forward, false}" color=red ];
414->413 [label="{forward}" color=black ];
415->406 [label="{forward, false}" color=red ];
417->415 [label="{forward}" color=black ];
418->417 [label="{forward, true}" color=green ];
419->418 [label="{forward}" color=black ];
420->419 [label="{external}" color=black ];
421->417 [label="{forward, false}" color=red ];
422->421 [label="{forward}" color=black ];
423->412 [label="{forward}" color=black ];
423->414 [label="{forward}" color=black ];
423->420 [label="{forward}" color=black ];
423->422 [label="{forward}" color=black ];
425->309 [label="{forward, false}" color=red ];
426->425 [label="{forward, true}" color=green ];
427->426 [label="{forward}" color=black ];
429->521 [label="{forward}" color=black ];
430->428 [label="{forward}" color=black ];
431->430 [label="{forward}" color=black ];
432->431 [label="{forward}" color=black ];
433->432 [label="{forward}" color=black ];
434->433 [label="{forward}" color=black ];
435->434 [label="{forward}" color=black ];
436->435 [label="{forward}" color=black ];
438->436 [label="{forward}" color=black ];
439->438 [label="{forward}" color=black ];
439->440 [label="{backward}" color=blue ];
440->449 [label="{forward}" color=black ];
440->454 [label="{forward}" color=black ];
440->459 [label="{forward}" color=black ];
440->464 [label="{forward}" color=black ];
440->469 [label="{forward}" color=black ];
441->439 [label="{forward, true}" color=green ];
443->441 [label="{forward}" color=black ];
445->443 [label="{forward}" color=black ];
446->445 [label="{forward}" color=black ];
447->446 [label="{forward}" color=black ];
448->447 [label="{forward}" color=black ];
449->448 [label="{forward}" color=black ];
450->443 [label="{forward}" color=black ];
451->450 [label="{forward}" color=black ];
452->451 [label="{forward}" color=black ];
453->452 [label="{forward}" color=black ];
454->453 [label="{forward}" color=black ];
455->443 [label="{forward}" color=black ];
456->455 [label="{forward}" color=black ];
457->456 [label="{forward}" color=black ];
458->457 [label="{forward}" color=black ];
459->458 [label="{forward}" color=black ];
460->443 [label="{forward}" color=black ];
461->460 [label="{forward}" color=black ];
462->461 [label="{forward}" color=black ];
463->462 [label="{forward}" color=black ];
464->463 [label="{forward}" color=black ];
465->443 [label="{forward}" color=black ];
466->465 [label="{forward}" color=black ];
467->466 [label="{forward}" color=black ];
468->467 [label="{forward}" color=black ];
469->468 [label="{forward}" color=black ];
470->439 [label="{forward, false}" color=red ];
471->470 [label="{forward}" color=black ];
472->471 [label="{external}" color=black ];
473->472 [label="{forward}" color=black ];
474->473 [label="{forward}" color=black ];
475->474 [label="{external}" color=black ];
476->475 [label="{forward}" color=black ];
477->476 [label="{external}" color=black ];
478->477 [label="{forward}" color=black ];
479->586 [label="{callreturn}" color=black ];
480->479 [label="{forward}" color=black ];
481->197 [label="{callreturn}" color=black ];
482->481 [label="{forward}" color=black ];
483->482 [label="{forward}" color=black ];
484->247 [label="{callreturn}" color=black ];
485->484 [label="{forward}" color=black ];
487->485 [label="{forward}" color=black ];
488->487 [label="{forward, true}" color=green ];
489->488 [label="{forward}" color=black ];
490->489 [label="{external}" color=black ];
491->487 [label="{forward, false}" color=red ];
491->490 [label="{forward}" color=black ];
492->590 [label="{callreturn}" color=black ];
493->492 [label="{forward}" color=black ];
495->493 [label="{forward}" color=black ];
496->495 [label="{forward}" color=black ];
496->497 [label="{backward}" color=blue ];
497->506 [label="{forward}" color=black ];
498->496 [label="{forward, true}" color=green ];
499->498 [label="{forward}" color=black ];
501->499 [label="{forward}" color=black ];
502->501 [label="{forward, true}" color=green ];
503->502 [label="{forward}" color=black ];
504->503 [label="{external}" color=black ];
505->501 [label="{forward, false}" color=red ];
505->504 [label="{forward}" color=black ];
506->247 [label="{callreturn}" color=black ];
507->496 [label="{forward, false}" color=red ];
508->594 [label="{callreturn}" color=black ];
509->508 [label="{forward}" color=black ];
510->603 [label="{callreturn}" color=black ];
511->510 [label="{forward}" color=black ];
512->216 [label="{callreturn}" color=black ];
514->512 [label="{forward}" color=black ];
515->514 [label="{forward, true}" color=green ];
516->515 [label="{forward}" color=black ];
517->514 [label="{forward, false}" color=red ];
517->516 [label="{forward}" color=black ];
518->517 [label="{forward}" color=black ];
519->518 [label="{forward}" color=black ];
520->523 [label="{callreturn}" color=black ];
521->520 [label="{forward}" color=black ];
522->519 [label="{call}" color=black ];
523->575 [label="{forward}" color=black ];
524->522 [label="{forward}" color=black ];
525->524 [label="{forward}" color=black ];
526->525 [label="{forward}" color=black ];
527->526 [label="{external}" color=black ];
528->527 [label="{forward}" color=black ];
529->528 [label="{external}" color=black ];
531->529 [label="{forward}" color=black ];
532->531 [label="{forward, true}" color=green ];
533->532 [label="{forward}" color=black ];
534->533 [label="{external}" color=black ];
535->531 [label="{forward, false}" color=red ];
536->535 [label="{forward}" color=black ];
537->536 [label="{external}" color=black ];
538->534 [label="{forward}" color=black ];
538->537 [label="{forward}" color=black ];
539->538 [label="{external}" color=black ];
540->539 [label="{forward}" color=black ];
541->540 [label="{external}" color=black ];
542->541 [label="{forward}" color=black ];
543->542 [label="{external}" color=black ];
544->543 [label="{forward}" color=black ];
545->544 [label="{external}" color=black ];
546->545 [label="{forward}" color=black ];
547->546 [label="{external}" color=black ];
549->547 [label="{forward}" color=black ];
550->549 [label="{forward, true}" color=green ];
551->550 [label="{forward}" color=black ];
552->551 [label="{external}" color=black ];
553->549 [label="{forward, false}" color=red ];
554->553 [label="{forward}" color=black ];
555->554 [label="{external}" color=black ];
556->552 [label="{forward}" color=black ];
556->555 [label="{forward}" color=black ];
557->556 [label="{external}" color=black ];
558->557 [label="{forward}" color=black ];
559->558 [label="{external}" color=black ];
560->559 [label="{forward}" color=black ];
561->560 [label="{external}" color=black ];
562->561 [label="{forward}" color=black ];
563->562 [label="{external}" color=black ];
564->563 [label="{forward}" color=black ];
565->564 [label="{external}" color=black ];
566->565 [label="{forward}" color=black ];
567->566 [label="{external}" color=black ];
568->567 [label="{forward}" color=black ];
569->568 [label="{external}" color=black ];
570->569 [label="{forward}" color=black ];
571->570 [label="{external}" color=black ];
572->571 [label="{forward}" color=black ];
573->572 [label="{external}" color=black ];
574->573 [label="{forward}" color=black ];
575->574 [label="{external}" color=black ];
576->598 [label="{call}" color=black ];
577->582 [label="{forward}" color=black ];
578->576 [label="{forward}" color=black ];
579->578 [label="{forward}" color=black ];
580->579 [label="{forward}" color=black ];
581->607 [label="{callreturn}" color=black ];
582->581 [label="{forward}" color=black ];
585->478 [label="{call}" color=black ];
586->588 [label="{forward}" color=black ];
587->585 [label="{forward}" color=black ];
588->587 [label="{forward}" color=black ];
589->491 [label="{call}" color=black ];
590->592 [label="{forward}" color=black ];
591->589 [label="{forward}" color=black ];
592->591 [label="{forward}" color=black ];
593->507 [label="{call}" color=black ];
594->601 [label="{forward}" color=black ];
595->593 [label="{forward}" color=black ];
596->595 [label="{forward}" color=black ];
597->596 [label="{forward}" color=black ];
598->597 [label="{forward}" color=black ];
599->577 [label="{callreturn}" color=black ];
600->599 [label="{forward}" color=black ];
601->600 [label="{forward}" color=black ];
602->509 [label="{call}" color=black ];
603->605 [label="{forward}" color=black ];
604->602 [label="{forward}" color=black ];
605->604 [label="{forward}" color=black ];
606->580 [label="{call}" color=black ];
607->617 [label="{forward}" color=black ];
608->606 [label="{forward}" color=black ];
609->608 [label="{forward}" color=black ];
610->609 [label="{forward}" color=black ];
611->610 [label="{forward}" color=black ];
612->611 [label="{external}" color=black ];
614->612 [label="{forward}" color=black ];
615->614 [label="{forward, true}" color=green ];
616->615 [label="{forward}" color=black ];
617->614 [label="{forward, false}" color=red ];
617->616 [label="{forward}" color=black ];
}